// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  password        String
  name            String
  avatar          String
  group           Group?    @relation(fields: [groupId], references: [id])
  groupId         Int
  tickets         Ticket[]
  bets            Bet[]
  transactions    Transaction[]
  score           Int      @default(20)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}


model Ticket {
  id            Int      @id @default(autoincrement())
  title         String
  author        User     @relation(fields: [authorId], references: [id])
  authorId      Int
  open          Boolean  @default(true)
  bets          Bet[]
  timeEstimate  DateTime
  finishedInTime    Boolean?
  finishedAt    DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}


model Bet {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  ticket        Ticket   @relation(fields: [ticketId], references: [id])
  ticketId      Int
  amount        Int
  outcome       Int?     
  doneInTime    Boolean
  notified      Boolean  @default(false)
  updatedAt     DateTime @updatedAt
  createdAt     DateTime @default(now())
}

model Transaction {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  change        Int
  finalBalance  Int
  type          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Group {
  id        Int      @id @default(autoincrement())
  name      String
  users     User[]
  bingoGame BingoGame?
}

model BingoGame {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  group     Group    @relation(fields: [groupId], references: [id])
  groupId   Int      @unique
  open      Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}